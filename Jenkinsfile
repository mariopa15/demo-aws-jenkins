pipeline {    agent any    environment {        AWS_REGION = 'us-east-1'           // Cambia según tu bucket        BUCKET_NAME = 'mi-bucket-s3'       // Cambia según tu bucket    }    stages {        stage('Checkout') {            steps {                echo "🔄 Clonando repositorio"                git branch: 'main',                    url: 'https://github.com/mariopa15/demo-aws-jenkins.git'            }        }        stage('Validar index.html') {            steps {                echo "🔍 Validando existencia de index.html"                sh '''                    if [ ! -f index.html ]; then                        echo "❌ index.html no encontrado"                        exit 1                    else                        echo "✅ index.html encontrado"                    fi                '''            }        }        stage('Validate Terraform') {            steps {                echo "⚙️ Verificando Terraform"                sh 'terraform -version'            }        }        stage('Terraform Init') {            steps {                echo "⚙️ Ejecutando Terraform Init"                sh '''                    if [ ! -f main.tf ]; then                        echo "⚠️ No hay archivos de configuración Terraform, creando ejemplo main.tf"                        cat > main.tf <<EOLterraform {  required_providers {    aws = {      source  = "hashicorp/aws"      version = "~> 5.0"    }  }  required_version = ">= 1.13.0"}provider "aws" {  region = var.region}variable "region" {  default = "us-east-1"}EOL                    fi                    terraform init -input=false -no-color                '''            }        }        stage('Terraform Plan') {            steps {                echo "📋 Ejecutando Terraform Plan"                sh 'terraform plan -input=false -no-color -out=tfplan'            }        }        stage('Terraform Apply') {            steps {                echo "🚀 Aplicando Terraform con auto-approve"                sh 'terraform apply -input=false -auto-approve tfplan'            }        }        stage('Upload index.html to S3') {            steps {                echo "☁️ Subiendo index.html a S3"                sh 'aws s3 cp index.html s3://$BUCKET_NAME/index.html'            }        }    }    post {        always {            echo "📜 Pipeline finalizado. Revisa los logs."        }        success {            echo "✅ Pipeline ejecutado correctamente"        }        failure {            echo "❌ El pipeline falló. Revisa errores anteriores"        }    }}